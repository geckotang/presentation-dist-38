<!DOCTYPE html>
<html>
  <head>
    <base href="@@base@@" />
    <meta charset="utf-8" />
    <link rel="stylesheet" href="engine/main.css" />
    <link rel="stylesheet" href="theme/newyork.css" />
    <link rel="stylesheet" href="engine/katex/katex.min.css" />
    <link
      href="https://fonts.googleapis.com/icon?family=Material+Icons"
      rel="stylesheet"
    />
    <style>
    :root{
--logo: ;
--darkaccent1color: #000000;
--lightaccent1color: #ffcc00;
--accent2: #43aa8b;
--accent3: #f9c74f;
--accent4: #90be6d;
--accent5: #f8961e;
--accent6: #577590;
--lighttitletextcolor: #ffcc00;
--darktitletextcolor: #000;
--lightbodytextcolor: #FFF;
--darkbodytextcolor: #000;
--lightbackgroundcolor: #ffffff;
--darkbackgroundcolor: #000000;
--bodyfont: yugothic;
--titlefont: yugothic;
} 

    </style>
    <link
      rel="stylesheet"
      type="text/css"
      href="engine/print.css"
      media="print"
    />
  </head>

  <body class="responsive">
    <div class="reveal">
      <div class="slides"><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="現場で使ってるcss20">現場で使ってるCSS 20</h3>

<h4 id="dist.38「cssな夜」">DIST.38 「CSSな夜」</h4>

<h4 id="20221209">2022/12/09</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 1rem;">
        <div style=""><h3 id="自己紹介">自己紹介</h3>

<p>株式会社ピクセルグリッド</p>

<p>げこたん（坂巻翔大郎）</p></div>
        <img src="images/Clipboard_1.png" class=" position-left-center" style="">
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split" style="width: 100%; font-size: 0.531rem;">
        <div style=""><h2 id="プロパティ">プロパティ</h2>

<ul>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">1.Custom Properties</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">2.gap</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">3.translate: X Y;</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">4.scroll-behavior</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">5.accent-color</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">6.inset</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">7.margin-block/inline</li>
</ul>

<h2 id="値">値</h2>

<ul>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">8.width: max-content;</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">9.currentColor</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">10.display: contents;</li>
</ul></div>
        <div style=""><h2 id="セレクタ">セレクタ</h2>

<ul>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">11.:is()</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">12.:has()</li>
</ul>

<h2 id="小技">小技</h2>

<ul>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">13.border-radius: 9999px;</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">14.visually hidden</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">15.一部は幅いっぱい</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">16.列幅揃える横並びのdt dd</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">17.吹き出しの三角 (border)</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">18.吹き出しの三角 (clip-path)</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">19.visibility + opacity のフェードインアウト</li>
</ul>

<h2 id="気をつけた方がいいこと">気をつけた方がいいこと</h2>

<ul>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">20.::backdrop はプロパティ継承しない</li>
</ul></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="cssプロパティ編">CSS プロパティ 編</h3>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="1.customproperties">1. Custom Properties</h3>

<h4 id="cssプロパティ">CSS プロパティ</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark default-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 1rem;">
        <div style=""><h4 id="ちょっと使うだけでも便利">ちょっと使うだけでも便利</h4>

<pre><code class="css hljs"><span class="hljs-selector-tag">div</span> {
  --_size: <span class="hljs-number">20px</span>;
  <span class="hljs-attribute">width</span>: <span class="hljs-built_in">var</span>(--_size);
  <span class="hljs-attribute">height</span>: <span class="hljs-built_in">var</span>(--_size);
}
</code></pre></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="2.gap">2. gap</h3>

<h4 id="cssプロパティ">CSS プロパティ</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 0.906rem;">
        <div style=""><h4 id="アイコンとテキスト横並び">アイコンとテキスト横並び</h4>

<pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"IconWithText"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">svg</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"IconWithText_Text"</span>&gt;</span>テキスト<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
</code></pre>

<pre><code class="css hljs"><span class="hljs-selector-class">.IconWithText</span> {
  <span class="hljs-attribute">display</span>: flex;
  <span class="hljs-attribute">align-items</span>: center;
  gap: <span class="hljs-number">10px</span>;
}
</code></pre></div>
        <div style=""><div class="single-image-wrapper"><img src="images/Notification_Center.png" class=" size-contain position-center-center"></div><p></p>

<p><a href="https://jsfiddle.net/xc0n7omf/5/">Demo</a> </p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 0.719rem;">
        <div style=""><h4 id="ボタン横並び">ボタン横並び</h4>

<pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">ul</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"ButtonList"</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"IconWithText"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"IconWithText"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">li</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"IconWithText"</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"button"</span>&gt;</span>...<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">li</span>&gt;</span>\u2028<span class="hljs-tag">&lt;/<span class="hljs-name">ul</span>&gt;</span>
</code></pre>

<pre><code class="css hljs"><span class="hljs-selector-class">.ButtonList</span> {
  <span class="hljs-attribute">display</span>: flex;
  gap: <span class="hljs-number">10px</span>;
}
</code></pre></div>
        <div style=""><div class="single-image-wrapper"><img src="images/Edit_fiddle_-_JSFiddle_-_Code_Playground_2.png" class=" size-contain position-center-center"></div><p></p>

<p><a href="https://jsfiddle.net/xc0n7omf/7/">Demo</a></p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="3.translate:xyz">3. translate: X Y Z;</h3>

<h4 id="cssプロパティ">CSS プロパティ</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split" style="width: 100%; font-size: 1rem;">
        <div style=""><h4 id="プロパティでもかけるようになりました。">プロパティでもかけるようになりました。</h4>

<pre><code class="css hljs"><span class="hljs-selector-tag">div</span> {
  <span class="hljs-attribute">transform</span>: <span class="hljs-built_in">translate</span>(<span class="hljs-number">10px</span>, <span class="hljs-number">20px</span>);
}
</code></pre>

<p>↓</p>

<pre><code class="css hljs"><span class="hljs-selector-tag">div</span> {
  translate: <span class="hljs-number">10px</span> <span class="hljs-number">20px</span>;
}
</code></pre></div>
        <div style=""><ul>
<li><a href="https://developer.mozilla.org/ja/docs/Web/CSS/translate">MDN</a></li>
<li><code class="hljs ebnf"><span class="hljs-attribute">rotate</span></code> ある</li>
<li><code class="hljs ebnf"><span class="hljs-attribute">scale</span></code> ある</li>
<li><code class="hljs ebnf"><span class="hljs-attribute">skew</span></code> ない</li>
</ul></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="4.scroll-behavior">4. scroll-behavior</h3>

<h4 id="cssプロパティ">CSS プロパティ</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 0.719rem;">
        <div style=""><h4 id="なめらかにスクロールさせるやつ">なめらかにスクロールさせるやつ</h4>

<pre><code class="css hljs"><span class="hljs-selector-pseudo">:root</span> {
  scroll-behavior: smooth;
}
</code></pre>

<pre><code class="css hljs"><span class="hljs-selector-class">.scroll-container</span> {
  <span class="hljs-attribute">overflow-y</span>: scroll;
  scroll-behavior: smooth;
}
</code></pre>

<blockquote>
<p>scroll-behavior は CSS のプロパティで、ナビゲーションや CSSOM のスクローリング API によってスクロールするボックスにスクロールが発生した際の、そのスクロールの振る舞いを設定します。</p>
</blockquote>

<p><a href="https://developer.mozilla.org/ja/docs/Web/CSS/scroll-behavior">MDN</a> </p></div>
        <video controls="" class=" size-contain position-center-center" style="" data-paused-by-reveal=""><source src="images/Kapture 2022-12-05 at 15.02.50.mp4"></video>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="5.accent-color">5. accent-color</h3>

<h4 id="cssプロパティ">CSS プロパティ</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark default-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 1rem;">
        <div style=""><h4 id="accent-color">accent-color</h4>

<blockquote>
<p>accent-color は CSS のプロパティで、一部の要素で生成されるユーザーインターフェイス要素の強調表示色を設定します。</p>
</blockquote>

<p><a href="https://developer.mozilla.org/ja/docs/Web/CSS/accent-color">MDN</a> </p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="variable-size-headings dark grid-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-grid grid-items-2 media-grid" style="width: 100%; font-size: 1rem;">
        <div style=""><h3 id="チェックボックスなどの色を変える">チェックボックスなどの色を変える</h3>

<pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"checkbox"</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"checkbox"</span> <span class="hljs-attr">checked</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">checked</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"range"</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">progress</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">progress</span>&gt;</span>
</code></pre>

<pre><code class="css hljs"><span class="hljs-selector-tag">input</span> {
  accent-<span class="hljs-attribute">color</span>: red;
}
</code></pre></div><div style=""><p>macOS Chrome 107</p>

<div class="single-image-wrapper"><img src="images/Clipboard_9.png" class=" size-contain position-center-center"></div><p></p>

<p>macOS Firefox 107</p>

<div class="single-image-wrapper"><img src="images/Clipboard_10.png" class=" size-contain position-center-center"></div><p></p>

<p>macOS Safari 15.5</p>

<div class="single-image-wrapper"><img src="images/Clipboard_11.png" class=" size-contain position-center-center"></div><p></p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="6.inset">6. inset</h3>

<h4 id="cssプロパティ">CSS プロパティ</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark default-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 1rem;">
        <div style=""><h4 id="inset">inset</h4>

<blockquote>
<p>inset は CSS のプロパティで、 top, right, bottom, left に対応する一括指定です。これは margin の一括指定における複数値の場合と同じ構文です。</p>
</blockquote>

<p><a href="https://developer.mozilla.org/ja/docs/Web/CSS/inset">MDN</a></p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="variable-size-headings dark v-split-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 0.953rem;">
        <div style=""><h4 id="toprightbottomleftをまとめて指定できる">top / right / bottom / left をまとめて指定できる</h4>

<pre><code class="css hljs"><span class="hljs-selector-tag">div</span> {
  <span class="hljs-attribute">top</span>: <span class="hljs-number">0</span>;
  <span class="hljs-attribute">right</span>: <span class="hljs-number">0</span>;
  <span class="hljs-attribute">bottom</span>: <span class="hljs-number">0</span>;
  <span class="hljs-attribute">left</span>: <span class="hljs-number">0</span>;
}
</code></pre>

<p>↓</p>

<pre><code class="css hljs"><span class="hljs-selector-tag">div</span> {
  inset: <span class="hljs-number">0</span>;
}
</code></pre></div>
        <img src="images/Clipboard_23.png" class=" size-contain position-center-center" style="">
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="7.margin-blockinline">7. margin-block/inline</h3>

<h4 id="cssプロパティ">CSS プロパティ</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark default-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 0.625rem;">
        <div style=""><h3 id="margin-block">margin-block</h3>

<blockquote>
<p>margin-block は CSS の一括指定プロパティで、論理的なブロックの先頭と末尾のマージンを設定します。これは要素の書字方向やテキストの向きに応じて物理的なマージンに変換されます。</p>
</blockquote>

<p><a href="https://developer.mozilla.org/ja/docs/Web/CSS/margin-block">MDN</a></p>

<h3 id="margin-inline">margin-inline</h3>

<blockquote>
<p>The margin-inline は CSS の一括指定プロパティで、論理的なインライン方向の先頭と末尾のマージンを設定します。これは要素の書字方向やテキストの向きに応じて物理的なマージンに変換されます。</p>
</blockquote>

<p><a href="https://developer.mozilla.org/ja/docs/Web/CSS/margin-block">MDN</a></p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="variable-size-headings dark default-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 0.531rem;">
        <div style=""><p>中央寄せといえば…</p>

<pre><code class="css hljs"><span class="hljs-selector-tag">div</span> {
  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span> auto;
} 
<span class="hljs-comment">/* OR */</span>
<span class="hljs-selector-tag">div</span> { 
  <span class="hljs-attribute">margin-right</span>: auto;
  <span class="hljs-attribute">margin-left</span>: auto;
}
</code></pre>

<p>margin-inlineを使うと、</p>

<p>margin-leftとmargin-rightを一括指定できる*1</p>

<pre><code class="css hljs"><span class="hljs-selector-tag">div</span> {
  <span class="hljs-attribute">margin</span>-inline: auto;
}
</code></pre>

<ul>
<li><small style="font-size: 0.6em;">*1 厳密には margin-inline-start と margin-inline-end を一括指定できる</small></li>
</ul></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="css値編">CSS 値 編</h3>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="8.width:max-content">8. width: max-content;</h3>

<h4 id="css値">CSS 値</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark default-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 1rem;">
        <div style=""><h4 id="max-contentとは">max-contentとは</h4>

<blockquote>
<p>max-content は大きさのキーワードで、<mark>コンテンツの内在的な最大幅や高さを表しています</mark>。テキストコンテンツの場合は、オーバーフローが発生しても、コンテンツはまったく折り返されないことを意味します。</p>
</blockquote>

<p><a href="https://developer.mozilla.org/ja/docs/Web/CSS/max-content">MDN</a> </p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="variable-size-headings dark v-split-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 0.531rem;">
        <div style=""><h3 id="max-contentmin-contentfit-content">max-content / min-content / fit-content</h3>

<pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"Wrap"</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"MaxContent"</span>&gt;</span>これはtextです。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"MinContent"</span>&gt;</span>これはtextです。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"FitContent"</span>&gt;</span>これはtextです。<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
</code></pre>

<pre><code class="css hljs"><span class="hljs-selector-class">.Wrap</span> {
  <span class="hljs-attribute">width</span>: <span class="hljs-number">100px</span>;
  <span class="hljs-attribute">outline</span>: <span class="hljs-number">3px</span> dotted red;
}
<span class="hljs-selector-class">.MaxContent</span> {
  <span class="hljs-attribute">width</span>: max-content;
  <span class="hljs-attribute">background-color</span>: tomato;
}
<span class="hljs-selector-class">.MinContent</span> {
  <span class="hljs-attribute">width</span>: min-content;
  <span class="hljs-attribute">background-color</span>: salmon;
}
<span class="hljs-selector-class">.FitContent</span> {
  <span class="hljs-attribute">width</span>: fit-content;
  <span class="hljs-attribute">background-color</span>: lime;
}
</code></pre></div>
        <div style=""><div class="single-image-wrapper"><img src="images/Edit_fiddle_-_JSFiddle_-_Code_Playground_3.png" class=" size-contain position-right-center"></div><p></p>

<p><a href="https://jsfiddle.net/4bz96fv2/">Demo</a></p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="9.currentcolor">9. currentColor</h3>

<h4 id="css値">CSS 値</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark default-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 1rem;">
        <div style=""><h3 id="currentcolor">currentColor</h3>

<blockquote>
<p>currentColor キーワードは、要素の color プロパティの値を表します。これで color の値をプロパティが既定で受け取らなくても利用することができます。</p>
</blockquote>

<p><a href="https://developer.mozilla.org/ja/docs/Web/CSS/color_value#currentcolor_%E3%82%AD%E3%83%BC%E3%83%AF%E3%83%BC%E3%83%89">MDN</a> </p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="variable-size-headings dark v-split-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 0.625rem;">
        <div style=""><h3 id="currentcolorを使う">currentColorを使う</h3>

<pre><code class="html hljs xml"><span class="hljs-comment">&lt;!-- box-shadowの色は初期値がcurrentColor --&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"color: tomato; box-shadow: 0 0 10px;"</span>&gt;</span>
  テキストが入ります。
<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
<span class="hljs-comment">&lt;!-- borderの色は初期値がcurrentColor --&gt;</span> 
<span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"color: tomato; border: 1px solid;"</span>&gt;</span>
  テキストが入ります。
<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
 
<span class="hljs-tag">&lt;<span class="hljs-name">p</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"color: tomato;"</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">svg</span> <span class="hljs-attr">width</span>=<span class="hljs-string">"12"</span> <span class="hljs-attr">xmlns</span>=<span class="hljs-string">"http://www.w3.org/2000/svg"</span> <span class="hljs-attr">viewBox</span>=<span class="hljs-string">"0 0 448 512"</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">path</span> <span class="hljs-attr">d</span>=<span class="hljs-string">"略"</span> <span class="hljs-attr">fill</span>=<span class="hljs-string">"currentColor"</span>/&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">svg</span>&gt;</span>
  テキストが入ります。
<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
</code></pre>

<p>currentColorは<a href="https://triple-underscore.github.io/css-color-ja.html#currentcolor-color">SVG由来</a>。</p></div>
        <div style=""><div class="single-image-wrapper"><img src="images/Clipboard_3.png" class=" size-contain position-center-center"></div><p></p>

<p><a href="https://jsfiddle.net/4bz96fv2/2/">Demo</a></p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="10.display:contents">10. display: contents;</h3>

<h4 id="css値">CSS 値</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark default-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 1rem;">
        <div style=""><h4 id="display:contents">display: contents;</h4>

<blockquote>
<p>これらの要素は自身のために特定のボックスを生成しません。擬似ボックスやその子ボックスで置き換えられます。</p>
</blockquote></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="variable-size-headings dark v-split-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 0.672rem;">
        <div style=""><h3 id="fieldset要素に使う">fieldset要素に使う</h3>

<pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span>好きな果物をひとつ選ぶ<span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"fruits"</span>&gt;</span>りんご<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"fruits"</span>&gt;</span>みかん<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span>  
<span class="hljs-tag">&lt;<span class="hljs-name">hr</span>&gt;</span>
  
<span class="hljs-tag">&lt;<span class="hljs-name">fieldset</span> <span class="hljs-attr">style</span>=<span class="hljs-string">"display: contents;"</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">legend</span>&gt;</span>好きな果物をひとつ選ぶ<span class="hljs-tag">&lt;/<span class="hljs-name">legend</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"fruits"</span>&gt;</span>りんご<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">label</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"radio"</span> <span class="hljs-attr">name</span>=<span class="hljs-string">"fruits"</span>&gt;</span>みかん<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">fieldset</span>&gt;</span>
</code></pre></div>
        <div style=""><div class="single-image-wrapper"><img src="images/Clipboard_25.png" class=" size-contain position-center-center"></div><p></p>

<p><a href="https://jsfiddle.net/4bz96fv2/3/">Demo</a></p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark default-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default media-grid" style="width: 100%; font-size: 1rem;">
        <div style=""><h4 id="astroで使ってる">astroで使ってる</h4>

<div class="single-image-wrapper"><img src="images/Clipboard_4.png" class=" position-center-center"></div>

<p><a href="https://astro.build/">astro</a>では<code class="hljs ebnf"><span class="hljs-attribute">astro-island</span></code>と<code class="hljs ebnf"><span class="hljs-attribute">astro-slot</span></code>という 独自の要素に対して<code class="hljs css"><span class="hljs-attribute">display</span>: contents;</code>を適用している。</p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="variable-size-headings dark default-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 0.906rem;">
        <div style=""><h4 id="注意点">注意点</h4>

<blockquote>
<p>大部分のブラウザーの現在の実装では、アクセシビリティツリーから display の値が contents であるすべての要素を削除します (ただし子孫は残ります)。これにより、その要素自身は読み上げソフトでは読み上げられなくなります。これは CSS 仕様書によれば正しくありません。</p>
</blockquote>

<p><a href="https://developer.mozilla.org/ja/docs/Web/CSS/display#%E3%82%A2%E3%82%AF%E3%82%BB%E3%82%B7%E3%83%93%E3%83%AA%E3%83%86%E3%82%A3%E3%81%AE%E8%80%83%E6%85%AE">MDN</a></p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="variable-size-headings dark v-split-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split" style="width: 100%; font-size: 0.531rem;">
        <div style=""><h2 id="プロパティ">プロパティ</h2>

<ul>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">1.Custom Properties</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">2.gap</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">3.translate: X Y;</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">4.scroll-behavior</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">5.accent-color</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">6.inset</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">7.margin-block/inline</li>
</ul>

<h2 id="値">値</h2>

<ul>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">8.width: max-content;</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">9.currentColor</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">10.display: contents;</li>
</ul></div>
        <div style=""><h2 id="セレクタ">セレクタ</h2>

<ul>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">11.:is()</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">12.:has()</li>
</ul>

<h2 id="小技">小技</h2>

<ul>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">13.border-radius: 9999px;</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">14.visually hidden</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">15.一部は幅いっぱい</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">16.列幅揃える横並びのdt dd</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">17.吹き出しの三角 (border)</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">18.吹き出しの三角 (clip-path)</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">19.visibility + opacity のフェードインアウト</li>
</ul>

<h2 id="気をつけた方がいいこと">気をつけた方がいいこと</h2>

<ul>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="">20.::backdrop はプロパティ継承しない</li>
</ul></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="cssセレクタ編">CSS セレクタ 編</h3>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="11.:is">11. :is()</h3>

<h4 id="cssセレクタ">CSS セレクタ</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark default-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 1rem;">
        <div style=""><h4 id=":is">:is()</h4>

<blockquote>
<p>:is() は CSS の擬似クラス関数で、セレクターのリストを引数に取り、リスト中のセレクターの何れか一つに当てはまる要素をすべて選択します。数多くのセレクターを<mark>小さくまとめて書くのに便利</mark>です。</p>
</blockquote>

<p><a href="https://developer.mozilla.org/ja/docs/Web/CSS/:is">MDN</a> </p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="variable-size-headings dark default-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 0.953rem;">
        <div style=""><h4 id=":isを使うとセレクタが短くかけることがある">:is()を使うとセレクタが短くかけることがある</h4>

<pre><code class="css hljs"><span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">th</span>,
<span class="hljs-selector-tag">table</span> <span class="hljs-selector-tag">td</span> {
  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;
}
</code></pre>

<pre><code class="css hljs"><span class="hljs-selector-tag">table</span> <span class="hljs-selector-pseudo">:is</span>(<span class="hljs-selector-tag">th</span>, <span class="hljs-selector-tag">td</span>) {
  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span>;
}
</code></pre></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="12.:has">12. :has()</h3>

<h4 id="cssセレクタ">CSS セレクタ</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark default-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 0.813rem;">
        <div style=""><h4 id=":has">:has()</h4>

<blockquote>
<p>:has() は CSS の擬似クラスで、引数として渡されたセレクターに (指定された要素の :scope の相対で) 該当する要素が一つ以上の要素に一致することを表します。</p>

<p>:has() 擬似クラスは、<mark>セレクターの相対的なリスト</mark>を引数に取ります。</p>
</blockquote>

<p><a href="https://developer.mozilla.org/ja/docs/Web/CSS/:has">MDN</a></p>

<p>Firefoxではまだ使えません（執筆現在v107）</p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="variable-size-headings dark v-split-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 0.578rem;">
        <div style=""><h3 id="〜を持つ要素にマッチする">〜を持つ要素にマッチする</h3>

<pre><code class="css hljs"><span class="hljs-selector-tag">table</span><span class="hljs-selector-pseudo">:not</span>(<span class="hljs-selector-pseudo">:has</span>(<span class="hljs-selector-tag">tbody</span>)) {
  <span class="hljs-attribute">color</span>: gray;
  <span class="hljs-attribute">border-color</span>: gray;
}
</code></pre>

<pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>見出し<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>見出し<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>見出し<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">tbody</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>値<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>値<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">td</span>&gt;</span>値<span class="hljs-tag">&lt;/<span class="hljs-name">td</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">tbody</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span>
 
<span class="hljs-tag">&lt;<span class="hljs-name">table</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">thead</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">tr</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>見出し<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>見出し<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><span class="hljs-tag">&lt;<span class="hljs-name">th</span>&gt;</span>見出し<span class="hljs-tag">&lt;/<span class="hljs-name">th</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">tr</span>&gt;</span>
  <span class="hljs-tag">&lt;/<span class="hljs-name">thead</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">table</span>&gt;</span>
</code></pre></div>
        <div style=""><div class="single-image-wrapper"><img src="images/Clipboard_26.png" class=" size-contain position-center-center"></div><p></p>

<p><a href="https://jsfiddle.net/tLyu1gp3/1/">Demo</a></p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="css小技編">CSS 小技 編</h3>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="13.border-radius:9999px">13. border-radius: 9999px;</h3>

<h4 id="css小技">CSS 小技</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 1rem;">
        <div style=""><h4 id="以外の大きい値を指定すればよし">%以外の大きい値を指定すればよし</h4>

<pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span>&gt;</span>
  テキストが入ります。<span class="hljs-tag">&lt;<span class="hljs-name">br</span>/&gt;</span>テキストが入ります。
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
</code></pre>

<pre><code class="css hljs"><span class="hljs-selector-tag">div</span> {
  <span class="hljs-attribute">padding</span>: <span class="hljs-number">10px</span> <span class="hljs-number">20px</span>;
  <span class="hljs-attribute">background</span>: tomato;
  <span class="hljs-attribute">border-radius</span>: <span class="hljs-number">9999px</span>;
}
</code></pre></div>
        <div style=""><div class="single-image-wrapper"><img src="images/Clipboard_6.png" class=" size-contain position-center-center"></div><p></p>

<p><a href="https://jsfiddle.net/L74t5ya1/">Demo</a></p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 1rem;">
        <div style=""><p>理由は<a href="https://stackoverflow.com/questions/29966499/border-radius-in-percentage-and-pixels-px-or-em">Border-radius in percentage (%) and pixels (px) or em | stack overflow</a></p>

<p>がわかりやすい</p></div>
        <div style=""><div class="single-image-wrapper"><img src="images/Clipboard_7.png" class=" size-contain position-left-center"></div><p></p>

<div class="single-image-wrapper"><img src="images/Clipboard_8.png" class=" size-contain position-left-center"></div><p></p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="14.visuallyhidden">14. Visually Hidden</h3>

<h4 id="css小技">CSS 小技</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split" style="width: 100%; font-size: 1rem;">
        <div style=""><h4 id="見た目だけ隠す">見た目だけ隠す</h4>

<pre><code class="css hljs"><span class="hljs-selector-class">.VisuallyHidden</span> {
 <span class="hljs-attribute">position</span>: absolute;
 <span class="hljs-attribute">clip</span>: <span class="hljs-built_in">rect</span>(<span class="hljs-number">1px</span>, <span class="hljs-number">1px</span>, <span class="hljs-number">1px</span>, <span class="hljs-number">1px</span>);
 <span class="hljs-attribute">padding</span>: <span class="hljs-number">0</span>;
 <span class="hljs-attribute">border</span>: <span class="hljs-number">0</span>;
 <span class="hljs-attribute">height</span>: <span class="hljs-number">1px</span>;
 <span class="hljs-attribute">width</span>: <span class="hljs-number">1px</span>;
 <span class="hljs-attribute">overflow</span>: hidden;
}
</code></pre></div>
        <div style=""><ul>
<li>画面上は見えなくても支援技術（スクリーンリーダーなど）は認識する</li>
<li>フォーカスできる</li>
<li><a href="https://getbootstrap.jp/docs/5.0/helpers/visually-hidden/">Bootstrap v5.0</a> にもある</li>
<li>Tailwindでは<a href="https://tailwindcss.com/docs/screen-readers">sr-only</a></li>
<li>SEO(?)のために使わない使えない</li>
</ul></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split" style="width: 100%; font-size: 1rem;">
        <div style=""><h4 id="カスタムチェックボックスやラジオボタンを作るとき">カスタムチェックボックスやラジオボタンを作るとき</h4>

<pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">label</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"Checkbox"</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">input</span> <span class="hljs-attr">type</span>=<span class="hljs-string">"checkbox"</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"VisuallyHidden"</span> /&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"Checkbox_Icon"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"Checkbox_Text"</span>&gt;</span>同意する<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">label</span>&gt;</span>
</code></pre></div>
        <div style=""><ul>
<li>input要素に<code class="hljs css"><span class="hljs-attribute">display</span>: none;</code>は使わない。使うとフォーカスできない。</li>
<li>input要素を<mark>隠しつつフォーカスできる</mark>ようにVisually Hiddenを使う</li>
</ul></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split" style="width: 100%; font-size: 0.766rem;">
        <div style=""><h4 id="ハイコンテキストなテキストを補完したいとき">ハイコンテキストなテキストを補完したいとき</h4>

<pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>
  ...
  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/news/2022-12-7"</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"VisuallyHidden"</span>&gt;</span>2022年12月7日の記事を<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>もっと見る
  <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">p</span>&gt;</span>
  ...
  <span class="hljs-tag">&lt;<span class="hljs-name">a</span> <span class="hljs-attr">href</span>=<span class="hljs-string">"/news/2022-12-8"</span>&gt;</span>
    <span class="hljs-tag">&lt;<span class="hljs-name">span</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"VisuallyHidden"</span>&gt;</span>2022年12月8日の記事を<span class="hljs-tag">&lt;/<span class="hljs-name">span</span>&gt;</span>もっと見る
  <span class="hljs-tag">&lt;/<span class="hljs-name">a</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">p</span>&gt;</span>
</code></pre></div>
        <div style=""><ul>
<li>スクリーンリーダーには、ページ中のリンクを一覧表示する機能があるが、「もっと見る」がいっぱいあるとユーザーは正しく判断できない</li>
<li>そもそも隠さずリンク先の内容を推測しやすいリンクテキストに見直すほうが良い</li>
</ul></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="15.一部は幅いっぱい">15. 一部は幅いっぱい</h3>

<h4 id="css小技">CSS 小技</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 0.531rem;">
        <div style=""><h4 id="cssgridを使用する">CSS Gridを使用する</h4>

<pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"Box"</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"Box_Item"</span>&gt;</span>テキストが...<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"Box_Item -full"</span>&gt;</span>テキストが...<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
  <span class="hljs-comment">&lt;!-- 略... --&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
</code></pre>

<pre><code class="css hljs"><span class="hljs-selector-class">.Box</span> {
  <span class="hljs-attribute">display</span>: grid;
  grid-template-<span class="hljs-attribute">columns</span>:
    [full-start]
      <span class="hljs-built_in">minmax</span>(<span class="hljs-number">20px</span>, <span class="hljs-number">1</span>fr)
      [main-start]
        <span class="hljs-built_in">minmax</span>(<span class="hljs-number">0</span>, <span class="hljs-number">500px</span>)
      [main-end]
      <span class="hljs-built_in">minmax</span>(<span class="hljs-number">20px</span>, <span class="hljs-number">1</span>fr)
    [full-end];
  row-gap: <span class="hljs-number">10px</span>;
}
<span class="hljs-selector-class">.Box</span> &gt; *  {
  grid-column: main;
}
<span class="hljs-selector-class">.Box_Item</span><span class="hljs-selector-class">.-full</span> {
  grid-column: full;
}
</code></pre></div>
        <img src="images/Clipboard_32.png" class=" size-contain position-center-center" style="">
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 0.531rem;">
        <div style=""><h4 id="cssgridを使用する">CSS Gridを使用する</h4>

<pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"Box"</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"Box_Item"</span>&gt;</span>テキストが...<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"Box_Item -full"</span>&gt;</span>テキストが...<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
  <span class="hljs-comment">&lt;!-- 略... --&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
</code></pre>

<pre><code class="css hljs"><span class="hljs-selector-class">.Box</span> {
  <span class="hljs-attribute">display</span>: grid;
  grid-template-<span class="hljs-attribute">columns</span>:
    [full-start]
      <span class="hljs-built_in">minmax</span>(<span class="hljs-number">20px</span>, <span class="hljs-number">1</span>fr)
      [main-start]
        <span class="hljs-built_in">minmax</span>(<span class="hljs-number">0</span>, <span class="hljs-number">500px</span>)
      [main-end]
      <span class="hljs-built_in">minmax</span>(<span class="hljs-number">20px</span>, <span class="hljs-number">1</span>fr)
    [full-end];
  row-gap: <span class="hljs-number">10px</span>;
}
<span class="hljs-selector-class">.Box</span> &gt; *  {
  grid-column: main;
}
<span class="hljs-selector-class">.Box_Item</span><span class="hljs-selector-class">.-full</span> {
  grid-column: full;
}
</code></pre></div>
        <div style=""><p>画面幅が広い時</p>

<div class="single-image-wrapper"><img src="images/Edit_fiddle_-_JSFiddle_-_Code_Playground.png" class=" size-contain position-center-center"></div><p></p>

<p>画面幅が狭い時</p>

<div class="single-image-wrapper"><img src="images/Edit_fiddle_-_JSFiddle_-_Code_Playground_1.png" class=" size-contain position-center-center"></div><p></p>

<p><a href="https://jsfiddle.net/sm1vLp79/9/">Demo</a></p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="16.列幅揃える横並びのdtdd">16. 列幅揃える横並びのdt dd</h3>

<h4 id="css小技">CSS 小技</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 0.531rem;">
        <div style=""><h4 id="1列目の幅は一番長いものに揃えたい">1列目の幅は一番長いものに揃えたい</h4>

<pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">dl</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>げこたん<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>さかまきしょうたろうさんの<span class="hljs-tag">&lt;<span class="hljs-name">br</span>&gt;</span>ニックネーム。<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">dt</span>&gt;</span>ピクセルグリッド<span class="hljs-tag">&lt;/<span class="hljs-name">dt</span>&gt;</span>
  <span class="hljs-tag">&lt;<span class="hljs-name">dd</span>&gt;</span>げこたんが勤めている会社の名前<span class="hljs-tag">&lt;/<span class="hljs-name">dd</span>&gt;</span>
<span class="hljs-tag">&lt;/<span class="hljs-name">dl</span>&gt;</span>
</code></pre>

<pre><code class="css hljs"><span class="hljs-selector-tag">dl</span> {
  <span class="hljs-attribute">display</span>: grid;
  grid-template-<span class="hljs-attribute">columns</span>:
    [key] max-content
    [value] <span class="hljs-number">1</span>fr
  ;
  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;
  gap: <span class="hljs-number">10px</span>;
}
<span class="hljs-selector-tag">dt</span> {
  grid-column: key;
  <span class="hljs-attribute">background-color</span>: tomato;
}
<span class="hljs-selector-tag">dd</span> {
  grid-column: value;
  <span class="hljs-attribute">margin</span>: <span class="hljs-number">0</span>;
  <span class="hljs-attribute">background-color</span>: limegreen;
}
</code></pre></div>
        <div style=""><div class="single-image-wrapper"><img src="images/Clipboard_12.png" class=" size-contain position-center-center"></div><p></p>

<p><a href="https://jsfiddle.net/fadsuzyn/2/">Demo</a></p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 1rem;">
        <div style=""><h3 id="実例">実例</h3>

<h3 id="codegridのお問合せフォーム">CodeGridのお問合せフォーム</h3></div>
        <img src="images/Clipboard_28.png" class=" size-contain position-center-center" style="">
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="17.吹き出し用の三角形border">17. 吹き出し用の三角形 (border)</h3>

<h4 id="css小技">CSS 小技</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 0.391rem;">
        <div style=""><h3 id="borderで三角形を作る">borderで三角形を作る</h3>

<pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"triangle  -top"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"triangle  -right"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"triangle  -bottom"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"triangle  -left"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
</code></pre>

<pre><code class="css hljs"><span class="hljs-selector-class">.triangle</span> {
  --_bg: red;
  --_size: <span class="hljs-number">50px</span>;
  --_size-side: <span class="hljs-built_in">calc</span>(<span class="hljs-built_in">var</span>(--_size) / <span class="hljs-number">2</span>);
  --_size-<span class="hljs-attribute">bottom</span>: <span class="hljs-built_in">var</span>(--_size);
  <span class="hljs-attribute">display</span>: inline-block;
  <span class="hljs-attribute">width</span>: <span class="hljs-number">0</span>;
  <span class="hljs-attribute">height</span>: <span class="hljs-number">0</span>;
  <span class="hljs-attribute">border-style</span>: solid;
  <span class="hljs-attribute">border-color</span>: transparent;
}
<span class="hljs-selector-class">.triangle</span><span class="hljs-selector-class">.-top</span> {
  <span class="hljs-attribute">border-width</span>: <span class="hljs-number">0</span> <span class="hljs-built_in">var</span>(--_size-side) <span class="hljs-built_in">var</span>(--_size-bottom) <span class="hljs-built_in">var</span>(--_size-side);
  <span class="hljs-attribute">border-bottom-color</span>: <span class="hljs-built_in">var</span>(--_bg);
}
<span class="hljs-selector-class">.triangle</span><span class="hljs-selector-class">.-right</span> {
  <span class="hljs-attribute">border-width</span>: <span class="hljs-built_in">var</span>(--_size-side) <span class="hljs-number">0</span> <span class="hljs-built_in">var</span>(--_size-side) <span class="hljs-built_in">var</span>(--_size-bottom);
  <span class="hljs-attribute">border-left-color</span>: <span class="hljs-built_in">var</span>(--_bg);
}
<span class="hljs-selector-class">.triangle</span><span class="hljs-selector-class">.-bottom</span> {
  <span class="hljs-attribute">border-width</span>: <span class="hljs-built_in">var</span>(--_size-bottom) <span class="hljs-built_in">var</span>(--_size-side) <span class="hljs-number">0</span> <span class="hljs-built_in">var</span>(--_size-side);
  <span class="hljs-attribute">border-top-color</span>: <span class="hljs-built_in">var</span>(--_bg);
}
<span class="hljs-selector-class">.triangle</span><span class="hljs-selector-class">.-left</span> {
  <span class="hljs-attribute">border-width</span>: <span class="hljs-built_in">var</span>(--_size-side) <span class="hljs-built_in">var</span>(--_size-bottom) <span class="hljs-built_in">var</span>(--_size-side) <span class="hljs-number">0</span>;
  <span class="hljs-attribute">border-right-color</span>: <span class="hljs-built_in">var</span>(--_bg);
}
</code></pre></div>
        <div style=""><div class="single-image-wrapper"><img src="images/Clipboard_20.png" class=" size-contain position-center-center"></div><p></p>

<p><a href="https://jsfiddle.net/z3r4ywoa/8/">Demo</a></p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="18.吹き出しの三角clip-path">18. 吹き出しの三角 (clip-path)</h3>

<h4 id="css小技">CSS 小技</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 0.531rem;">
        <div style=""><h4 id="パスを引いて三角形を作る">パスを引いて三角形を作る</h4>

<pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"triangle  -top"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"triangle  -right"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"triangle  -bottom"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"triangle  -left"</span>&gt;</span><span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
</code></pre>

<pre><code class="css hljs"><span class="hljs-selector-class">.triangle</span> {
  --_bg: red;
  --_dir-<span class="hljs-attribute">top</span>: <span class="hljs-built_in">polygon</span>(<span class="hljs-number">50%</span> <span class="hljs-number">0%</span>, <span class="hljs-number">0%</span> <span class="hljs-number">100%</span>, <span class="hljs-number">100%</span> <span class="hljs-number">100%</span>);
  --_dir-<span class="hljs-attribute">right</span>: <span class="hljs-built_in">polygon</span>(<span class="hljs-number">0%</span> <span class="hljs-number">0%</span>, <span class="hljs-number">100%</span> <span class="hljs-number">50%</span>, <span class="hljs-number">0%</span> <span class="hljs-number">100%</span>);
  --_dir-<span class="hljs-attribute">bottom</span>: <span class="hljs-built_in">polygon</span>(<span class="hljs-number">0%</span> <span class="hljs-number">0%</span>, <span class="hljs-number">100%</span> <span class="hljs-number">0%</span>, <span class="hljs-number">50%</span> <span class="hljs-number">100%</span>);
  --_dir-<span class="hljs-attribute">left</span>: <span class="hljs-built_in">polygon</span>(<span class="hljs-number">100%</span> <span class="hljs-number">0%</span>, <span class="hljs-number">100%</span> <span class="hljs-number">100%</span>, <span class="hljs-number">0%</span> <span class="hljs-number">50%</span>);
  --_size: <span class="hljs-number">50px</span>;
  
  <span class="hljs-attribute">display</span>: inline-block;
  <span class="hljs-attribute">width</span>: <span class="hljs-built_in">var</span>(--_size);
  <span class="hljs-attribute">height</span>: <span class="hljs-built_in">var</span>(--_size);
  <span class="hljs-attribute">clip-path</span>: <span class="hljs-built_in">var</span>(--_dir);
  <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">var</span>(--_bg);
}

<span class="hljs-selector-class">.triangle</span><span class="hljs-selector-class">.-top</span> { --_dir: <span class="hljs-built_in">var</span>(--_dir-top); }
<span class="hljs-selector-class">.triangle</span><span class="hljs-selector-class">.-right</span> { --_dir: <span class="hljs-built_in">var</span>(--_dir-right); }
<span class="hljs-selector-class">.triangle</span><span class="hljs-selector-class">.-bottom</span> { --_dir: <span class="hljs-built_in">var</span>(--_dir-bottom); }
<span class="hljs-selector-class">.triangle</span><span class="hljs-selector-class">.-left</span> { --_dir: <span class="hljs-built_in">var</span>(--_dir-left); }
</code></pre></div>
        <div style=""><div class="single-image-wrapper"><img src="images/Clipboard_18.png" class=" size-contain position-center-center"></div><p></p>

<p><a href="https://jsfiddle.net/z3r4ywoa/6/">Demo</a></p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="19.visibilityopacityのフェードインアウト">19. visibility + opacityのフェードインアウト</h3>

<h4 id="css小技">CSS 小技</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split media-grid" style="width: 100%; font-size: 0.672rem;">
        <div style=""><h3 id="開閉するメニュー">開閉するメニュー</h3>

<pre><code class="html hljs xml"><span class="hljs-tag">&lt;<span class="hljs-name">button</span> <span class="hljs-attr">title</span>=<span class="hljs-string">"メニュー"</span>&gt;</span>🍔<span class="hljs-tag">&lt;/<span class="hljs-name">button</span>&gt;</span>
<span class="hljs-tag">&lt;<span class="hljs-name">div</span> <span class="hljs-attr">class</span>=<span class="hljs-string">"Menu"</span>&gt;</span>
  メニューです
<span class="hljs-tag">&lt;/<span class="hljs-name">div</span>&gt;</span>
</code></pre>

<pre><code class="css hljs"><span class="hljs-selector-class">.Menu</span> {
  <span class="hljs-attribute">visibility</span>: hidden;
  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">0</span>;
  <span class="hljs-attribute">transition-duration</span>: <span class="hljs-number">0.1s</span>;
  <span class="hljs-attribute">transition-timing-function</span>: linear;
  <span class="hljs-attribute">transition-property</span>: visibility, opacity;
}
<span class="hljs-comment">/* JSで付与 */</span>
<span class="hljs-selector-class">.Menu</span><span class="hljs-selector-class">.-expanded</span> {
  <span class="hljs-attribute">visibility</span>: visible;
  <span class="hljs-attribute">opacity</span>: <span class="hljs-number">1</span>;
  <span class="hljs-attribute">transition-duration</span>: <span class="hljs-number">0.3s</span>;
}
</code></pre></div>
        <div style=""><div class="single-image-wrapper"><video controls="" class=" size-contain position-center-center" data-paused-by-reveal=""><source src="images/Kapture 2022-11-29 at 16.44.10.mp4"></video></div>

<p><a href="https://jsfiddle.net/j083sxmc/37/">Demo</a></p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark default-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default" style="width: 100%; font-size: 0.625rem;">
        <div style=""><blockquote class="is-single-quote"><div class="line"></div>
<p>visibility は CSS のプロパティで、文書のレイアウトを変更することなく要素を表示したり非表示にしたりします。</p>

<p>要素の visibility の値に hidden を使用すると、 アクセシビリティツリーから削除されます。これは要素及びその子孫要素が読み上げ技術でアナウンスされない結果になります。</p>

<p><mark>visibility の値は可視及び不可視の間で補間可能です。</mark> 従って、開始または終了の値の一つが visible でない限りは、補間は行われません。値は離散的なステップとして補間され、タイミング関数の 0 と 1 間の値が、 visible に対応し、タイミング関数の他の値 (トランジションの開始点または終了点でのみ、または [0、1] の外側の y 値を有する cubic-bezier() 関数の結果として) はより近い終了点に対応します。</p>
<div class="line"></div></blockquote></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="css気をつけた方がいいこと編">CSS 気をつけた方がいいこと 編</h3>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark section-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-section" style="width: 100%; font-size: 1rem;">
        <div style="">
          <h3 id="20::backdropはプロパティ継承しない">20 ::backdrop はプロパティ継承しない</h3>

<h4 id="css気をつけた方がいいこと">CSS 気をつけた方がいいこと</h4>
        </div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split" style="width: 100%; font-size: 0.813rem;">
        <div style=""><h4 id="やりたくてもできなかったこと">やりたくてもできなかったこと</h4>

<pre><code class="css hljs"><span class="hljs-selector-pseudo">:root</span> {
  --bg: red;
}
 
<span class="hljs-selector-pseudo">::backdrop</span> {
  <span class="hljs-comment">/* :rootから--bgを継承しないので無効 */</span>
  <span class="hljs-attribute">background-color</span>: <span class="hljs-built_in">var</span>(--bg);
}
</code></pre></div>
        <div style=""><ul>
<li><p>::backdrop擬似要素では祖先要素で定義したカスタムプロパティが使えない</p>

<blockquote>
<p>::backdrop 擬似要素は<mark>どの要素にも継承せず、どの要素からも継承しません</mark>。この擬似要素に適用するプロパティの制限はありません。</p>
</blockquote></li>
</ul>

<p><a href="https://developer.mozilla.org/ja/docs/Web/CSS/::backdrop">MDN</a></p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark v-split-container present fit-warning has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-v-split" style="width: 100%; font-size: 0.531rem;">
        <div style=""><h2 id="プロパティ">プロパティ</h2>

<ul>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">1.Custom Properties</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">2.gap</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">3.translate: X Y;</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">4.scroll-behavior</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">5.accent-color</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">6.inset</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">7.margin-block/inline</li>
</ul>

<h2 id="値">値</h2>

<ul>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">8.width: max-content;</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">9.currentColor</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">10.display: contents;</li>
</ul></div>
        <div style=""><h2 id="セレクタ">セレクタ</h2>

<ul>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">11.:is()</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">12.:has()</li>
</ul>

<h2 id="小技">小技</h2>

<ul>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">13.border-radius: 9999px;</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">14.visually hidden</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">15.一部は幅いっぱい</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">16.列幅揃える横並びのdt dd</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">17.吹き出しの三角 (border)</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">18.吹き出しの三角 (clip-path)</li>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">19.visibility + opacity のフェードインアウト</li>
</ul>

<h2 id="気をつけた方がいいこと">気をつけた方がいいこと</h2>

<ul>
<li class="task-list-item"><input type="checkbox" class="task-list-item-checkbox" disabled="" checked="">20.::backdrop はプロパティ継承しない</li>
</ul></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
</section><section class="variable-size-headings dark default-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-default media-grid" style="width: 100%; font-size: 0.813rem;">
        <div style=""><h3 id="フロントエンドに関わる人々のためのオンラインメディア">フロントエンドに関わる人々のためのオンラインメディア</h3>

<div class="single-image-wrapper"><img src="images/Clipboard_22.png" class=" size-contain position-center-center"></div>

<p>このような話をCodeGridというメディアで書いてるのでよかったら講読してください。（私の記事は193記事）</p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section><section class="variable-size-headings dark title-container present has-dark-background fitted" data-updated="true" style="display: grid;">

      <div class="header"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      <div class="layout-title" style="width: 100%; font-size: 1rem;">
        <div style=""><h2 id="おわり">おわり</h2>

<p>質問などあればお気軽にお声がけください。</p></div>
      </div>
      <div class="footnotes"></div>
      <div class="footer"><div class="leading"></div><div class="middle"></div><div class="trailing"></div></div>
      
</section></div>
    </div>
    <script src="engine/index.js"></script>
    <script src="engine/d3v4.min.js" charset="utf-8"></script>
    <script src="engine/charts.min.js" charset="utf-8"></script>
    <script src="engine/billboard.min.js"></script>
    <script>
      Reveal.configure({
        progress: true,
        keyboard: true,
        dependencies: [
          {
            src: "engine/highlight.js",
            sync: true,
            callback: function () {
              hljs.initHighlightingOnLoad();
            },
          },
        ],
      });
    </script>
  </body>
</html>
